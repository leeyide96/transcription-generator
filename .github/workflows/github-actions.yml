name: pipeline-actions

on:
  push:
    branches: [ master ]


permissions: read-all
jobs:
  DeployPipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Google Cloud Auth SVC account
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'


        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: cd .github && terraform init

      - name: Terraform Format
        run: cd .github && terraform fmt -diff -check


      - name: Terraform Validate
        run: cd .github && terraform validate -json
        env:
          TF_VAR_projectid: ${{ vars.projectid }}
          TF_VAR_region: ${{ vars.region }}
          TF_VAR_zone: ${{ vars.zone }}
          TF_VAR_instance_name: ${{ vars.instance_name }}

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: cd .github && terraform plan -input=false -out=plan
        env:
          TF_VAR_projectid: ${{ vars.projectid }}
          TF_VAR_region: ${{ vars.region }}
          TF_VAR_zone: ${{ vars.zone }}
          TF_VAR_instance_name: ${{ vars.instance_name }}


      - name: Terraform Apply
        run: cd .github && terraform apply -auto-approve -input=false
        env:
          TF_VAR_projectid: ${{ vars.projectid }}
          TF_VAR_region: ${{ vars.region }}
          TF_VAR_zone: ${{ vars.zone }}
          TF_VAR_instance_name: ${{ vars.instance_name }}

